meta:
  plugin_name: go.d.plugin
  module_name: docker_engine
  alternative_monitored_instances: []
  monitored_instance:
    name: Docker Engine
    link: https://docs.docker.com/engine/
    categories: []
    icon_filename: docker.png
  related_resources:
    integrations:
      list: []
  info_provided_to_referring_integrations:
    description: ""
  keywords: []
  most_popular: false
overview:
  data_collection:
    metrics_description: This collector monitors statistics from Docker Engine about container states, health statuses and more.
    method_description: The [built-in](https://docs.docker.com/config/daemon/prometheus/) Prometheus exporter is used to fetch the metrics.
  supported_platforms:
    include: []
    exclude: []
  multi-instance: true
  additional_permissions:
    description: ""
  default_behavior:
    auto_detection:
      description: |
        The collector discovers Docker Engine instances that use the built-in Prometheus exporter, exposing their data on `http://127.0.0.1:9323/metrics`.
    limits:
      description: ""
    performance_impact:
      description: ""
setup:
  prerequisites:
    list:
      - title: Enabling the built-in Prometheus exporter on Docker
        description: |
          You need to configure Docker to expose the metrics in a specific URL and Port, making it a Prometheus target.

          Configuration may vary per Docker version, so you should check the [Docker documentation](https://docs.docker.com/config/daemon/prometheus/).

          Essentially, you need to add a `metrics-addr` element to Docker's configuration file, with the IP and port of your choice:

          ```json
          {
            "metrics-addr" : "127.0.0.1:9323"
          }
          ```
  configuration:
    file:
      name: "go.d/docker_engine.conf"
    options:
      description: |
        The following options can be defined globally: update_every, autodetection_retry.
      folding:
        title: "All options"
        enabled: true
      list:
        - name: update_every
          description: Data collection frequency.
          default_value: 1
          required: false
        - name: autodetection_retry
          description: Re-check interval in seconds. Zero means not to schedule re-check.
          default_value: 0
          required: false
        - name: url
          description: Server URL.
          default_value: http://127.0.0.1:9323/metrics
          required: true
        - name: username
          description: Username for basic HTTP authentication.
          default_value: ""
          required: false
        - name: password
          description: Password for basic HTTP authentication.
          default_value: ""
          required: false
        - name: proxy_url
          description: Proxy URL.
          default_value: ""
          required: false
        - name: proxy_username
          description: Username for proxy basic HTTP authentication.
          default_value: ""
          required: false
        - name: proxy_password
          description: Password for proxy basic HTTP authentication.
          default_value: ""
          required: false
        - name: timeout
          description: HTTP request timeout.
          default_value: 1
          required: false
        - name: method
          description: HTTP request method.
          default_value: "GET"
          required: false
        - name: body
          description: HTTP request body.
          default_value: ""
          required: false
        - name: headers
          description: HTTP request headers.
          default_value: ""
          required: false
        - name: not_follow_redirects
          description: Redirect handling policy. Controls whether the client follows redirects.
          default_value: "no"
          required: false
        - name: tls_skip_verify
          description: Server certificate chain and hostname validation policy. Controls whether the client performs this check.
          default_value: "no"
          required: false
        - name: tls_ca
          description: Certification authority that the client uses when verifying the server's certificates.
          default_value: ""
          required: false
        - name: tls_cert
          description: Client TLS certificate.
          default_value: ""
          required: false
        - name: tls_key
          description: Client TLS key.
          default_value: ""
          required: false
    examples:
      folding:
        enabled: true
        title: ""
      list:
        - name: Basic
          description: A basic example configuration.
          config: |
            jobs:
              - name: local
                url: http://127.0.0.1:9323/metrics
        - name: HTTP authentication
          description: Basic HTTP authentication.
          config: |
            jobs:
              - name: local
                url: http://127.0.0.1:9323/metrics
                username: username
                password: password
        - name: HTTPS with self-signed certificate
          description: Configuration with enabled HTTPS and self-signed certificate.
          config: |
            jobs:
              - name: local
                url: http://127.0.0.1:9323/metrics
                tls_skip_verify: yes
        - name: Multi-instance
          description: |
            > **Note**: When you define multiple jobs, their names must be unique.

            Collecting metrics from local and remote instances.
          config: |
            jobs:
              - name: local
                url: http://127.0.0.1:9323/metrics

              - name: remote
                url: http://192.0.2.1:9323/metrics
troubleshooting:
  problems:
    list: []
alerts: []
metrics:
  folding:
    title: Metrics
    enabled: false
  description: ""
  availability: []
  scopes:
    - name: global
      description: These metrics refer to the entire monitored application.
      labels: []
      metrics:
        - name: docker_engine.engine_daemon_container_actions
          description: Container Actions
          unit: "actions/s"
          chart_type: stacked
          dimensions:
            - name: changes
            - name: commit
            - name: create
            - name: delete
            - name: start
        - name: docker_engine.engine_daemon_container_states_containers
          description: Containers In Various States
          unit: "containers"
          chart_type: stacked
          dimensions:
            - name: running
            - name: paused
            - name: stopped
        - name: docker_engine.builder_builds_failed_total
          description: Builder Builds Fails By Reason
          unit: "fails/s"
          chart_type: stacked
          dimensions:
            - name: build_canceled
            - name: build_target_not_reachable_error
            - name: command_not_supported_error
            - name: dockerfile_empty_error
            - name: dockerfile_syntax_error
            - name: error_processing_commands_error
            - name: missing_onbuild_arguments_error
            - name: unknown_instruction_error
        - name: docker_engine.engine_daemon_health_checks_failed_total
          description: Health Checks
          unit: "events/s"
          chart_type: line
          dimensions:
            - name: fails
        - name: docker_engine.swarm_manager_leader
          description: Swarm Manager Leader
          unit: "bool"
          chart_type: line
          dimensions:
            - name: is_leader
        - name: docker_engine.swarm_manager_object_store
          description: Swarm Manager Object Store
          unit: "objects"
          chart_type: stacked
          dimensions:
            - name: nodes
            - name: services
            - name: tasks
            - name: networks
            - name: secrets
            - name: configs
        - name: docker_engine.swarm_manager_nodes_per_state
          description: Swarm Manager Nodes Per State
          unit: "nodes"
          chart_type: stacked
          dimensions:
            - name: ready
            - name: down
            - name: unknown
            - name: disconnected
        - name: docker_engine.swarm_manager_tasks_per_state
          description: Swarm Manager Tasks Per State
          unit: "tasks"
          chart_type: stacked
          dimensions:
            - name: running
            - name: failed
            - name: ready
            - name: rejected
            - name: starting
            - name: shutdown
            - name: new
            - name: orphaned
            - name: preparing
            - name: pending
            - name: complete
            - name: remove
            - name: accepted
            - name: assigned
