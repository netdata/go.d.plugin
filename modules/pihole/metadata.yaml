name: pihole
title: Pi-hole collector
overview:
  application:
    description: "[Pi-hole](https://pi-hole.net) is a Linux network-level advertisement
      and Internet tracker blocking application which\nacts as a DNS sinkhole, intended
      for use on a private network.\n"
  collector:
    description: "This collector monitors one or more Pi-hole instances using [PHP
      API](https://github.com/pi-hole/AdminLTE).\n\nThe data provided by the API is
      for the last 24 hours. All collected values refer to this time period and not
      to the\nmodule's collection interval.\n"
setup:
  prerequisites:
    list: []
  configuration:
    options:
      description: "The following options can be defined globally: update_every, autodetection_retry.\n"
      folding:
        title: Config options
        enabled: true
      list:
        - name: update_every
          description: Data collection frequency.
          required: false
          default_value: 5
        - name: autodetection_retry
          description: Re-check interval in seconds. Zero means not to schedule re-check.
          required: false
          default_value: 0
        - name: url
          description: Server URL.
          required: true
          default_value: http://127.0.0.1
        - name: setup_vars_path
          description: Path to setupVars.conf. This file is used to get the web password.
          required: false
          default_value: /etc/pihole/setupVars.conf
        - name: timeout
          description: HTTP request timeout.
          required: false
          default_value: 5
        - name: username
          description: Username for basic HTTP authentication.
          required: false
          default_value: ''
        - name: password
          description: Password for basic HTTP authentication.
          required: false
          default_value: ''
        - name: proxy_url
          description: Proxy URL.
          required: false
          default_value: ''
        - name: proxy_username
          description: Username for proxy basic HTTP authentication.
          required: false
          default_value: ''
        - name: proxy_password
          description: Password for proxy basic HTTP authentication.
          required: false
          default_value: ''
        - name: method
          description: HTTP request method.
          required: false
          default_value: GET
        - name: body
          description: HTTP request body.
          required: false
          default_value: ''
        - name: headers
          description: HTTP request headers.
          required: false
          default_value: ''
        - name: not_follow_redirects
          description: Redirect handling policy. Controls whether the client follows
            redirects.
          required: false
          default_value: no
        - name: tls_skip_verify
          description: Server certificate chain and hostname validation policy. Controls
            whether the client performs this check.
          required: false
          default_value: no
        - name: tls_ca
          description: Certification authority that the client uses when verifying
            the server's certificates.
          required: false
          default_value: ''
        - name: tls_cert
          description: Client TLS certificate.
          required: false
          default_value: ''
        - name: tls_key
          description: Client TLS key.
          required: false
          default_value: ''
    examples:
      folding:
        title: Config
        enabled: true
      list:
        - name: Basic
          description: A basic example configuration.
          config: "jobs:\n  - name: local\n    url: http://127.0.0.1\n"
        - name: HTTPS with self-signed certificate
          description: Remote instance with enabled HTTPS and self-signed certificate.
          config: "jobs:\n  - name: local\n    url: https://203.0.113.11\n    tls_skip_verify:
            yes\n    password: 1ebd33f882f9aa5fac26a7cb74704742f91100228eb322e41b7bd6e6aeb8f74b\n"
        - name: Multi-instance
          description: "> **Note**: When you define multiple jobs, their names must
            be unique.\n\nCollecting metrics from local and remote instances.\n"
          config: "jobs:\n  - name: local\n    url: http://127.0.0.1\n\n  - name:
            remote\n    url: http://203.0.113.10\n    password: 1ebd33f882f9aa5fac26a7cb74704742f91100228eb322e41b7bd6e6aeb8f74b\n"
    file:
      name: ''
troubleshooting:
  problems:
    list: []
metrics:
  folding:
    title: Metrics
    enabled: false
  description: ''
  availability: []
  scopes:
    - name: global
      description: These metrics refer to the entire monitored application.
      labels: []
      metrics:
        - name: pihole.dns_queries_total
          description: DNS Queries Total (Cached, Blocked and Forwarded)
          unit: queries
          dimensions:
            - name: queries
          chart_type: line
        - name: pihole.dns_queries
          description: DNS Queries
          unit: queries
          dimensions:
            - name: cached
            - name: blocked
            - name: forwarded
          chart_type: stacked
        - name: pihole.dns_queries_percentage
          description: DNS Queries Percentage
          unit: percentage
          dimensions:
            - name: cached
            - name: blocked
            - name: forwarded
          chart_type: stacked
        - name: pihole.unique_clients
          description: Unique Clients
          unit: clients
          dimensions:
            - name: unique
          chart_type: line
        - name: pihole.domains_on_blocklist
          description: Domains On Blocklist
          unit: domains
          dimensions:
            - name: blocklist
          chart_type: line
        - name: pihole.blocklist_last_update
          description: Blocklist Last Update
          unit: seconds
          dimensions:
            - name: ago
          chart_type: line
        - name: pihole.unwanted_domains_blocking_status
          description: Unwanted Domains Blocking Status
          unit: status
          dimensions:
            - name: enabled
            - name: disabled
          chart_type: line
        - name: pihole.dns_queries_types
          description: DNS Queries Per Type
          unit: percentage
          dimensions:
            - name: a
            - name: aaaa
            - name: any
            - name: ptr
            - name: soa
            - name: srv
            - name: txt
          chart_type: stacked
        - name: pihole.dns_queries_forwarded_destination
          description: DNS Queries Per Destination
          unit: percentage
          dimensions:
            - name: cached
            - name: blocked
            - name: other
          chart_type: stacked
