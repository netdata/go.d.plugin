- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: NetApp Trident
      link: https://github.com/NetApp/trident
      icon_filename: netapp.png
      categories:
        - data-collection.storage-mount-points-and-filesystems
    keywords:
      - network monitoring
      - network performance
      - traffic analysis
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor NetApp Trident container storage metrics for efficient storage provisioning and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [NetApp Trident exporter](https://github.com/NetApp/trident).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [NetApp Trident exporter](https://github.com/NetApp/trident) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Scylla-Cluster-Tests
      link: https://github.com/scylladb/scylla-cluster-tests/
      icon_filename: scylla.png
      categories:
        - data-collection.database-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor ScyllaDB cluster test metrics for efficient database testing and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Scylla-Cluster-Tests Exporter](https://github.com/scylladb/scylla-cluster-tests/).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Scylla-Cluster-Tests Exporter](https://github.com/scylladb/scylla-cluster-tests/) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: ScyllaDB
      link: https://github.com/scylladb/scylladb
      icon_filename: scylla.png
      categories:
        - data-collection.database-servers
    keywords:
      - database
      - dbms
      - data storage
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track ScyllaDB NoSQL database metrics for efficient database management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [ScyllaDB exporter](https://github.com/scylladb/scylladb).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [ScyllaDB exporter](https://github.com/scylladb/scylladb) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: StayRTR
      link: https://github.com/bgp/stayrtr
      icon_filename: stayrtr.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track RPKI-to-Router (RTR) protocol metrics for efficient routing security and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [StayRTR Exporter](https://github.com/bgp/stayrtr).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [StayRTR Exporter](https://github.com/bgp/stayrtr) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Wildfly
      link: https://docs.wildfly.org/18/Admin_Guide.html#MicroProfile_Metrics_SmallRye
      icon_filename: wildfly.png
      categories:
        - data-collection.application-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor WildFly (formerly JBoss AS) Java application server metrics for efficient Java application management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Wildfly Exporter](https://docs.wildfly.org/18/Admin_Guide.html#MicroProfile_Metrics_SmallRye).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Wildfly Exporter](https://docs.wildfly.org/18/Admin_Guide.html#MicroProfile_Metrics_SmallRye) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Zeek
      link: https://github.com/zeek/zeek
      icon_filename: zeek.png
      categories:
        - data-collection.apm
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Zeek (formerly Bro) network security monitoring metrics for efficient network security and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Zeek](https://github.com/zeek/zeek).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Zeek](https://github.com/zeek/zeek) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Authelia
      link: https://www.authelia.com/reference/guides/metrics/#prometheus
      icon_filename: authelia.png
      categories:
        - data-collection.authentication-and-authorization
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep tabs on Authelia authentication and authorization metrics for enhanced security and user management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Authelia](https://www.authelia.com/reference/guides/metrics/#prometheus).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Authelia](https://www.authelia.com/reference/guides/metrics/#prometheus) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Butler (Qlik Sense DevOps toolbox)
      link: https://github.com/ptarmiganlabs/butler
      icon_filename: butler.png
      categories:
        - data-collection.apm
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Butler Qlik Sense DevOps metrics for efficient development and operations management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Butler (Qlik Sense DevOps toolbox) Exporter. WIP](https://github.com/ptarmiganlabs/butler).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Butler (Qlik Sense DevOps toolbox) Exporter. WIP](https://github.com/ptarmiganlabs/butler) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Butler CW (Qlik Sense cache warming tool)
      link: https://github.com/ptarmiganlabs/butler-cw
      icon_filename: butler-cw.png
      categories:
        - data-collection.apm
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep tabs on Butler CW Qlik Sense cache warming metrics for optimized data access and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Butler CW (Qlik Sense cache warming tool) Exporter. WIP](https://github.com/ptarmiganlabs/butler-cw).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Butler CW (Qlik Sense cache warming tool) Exporter. WIP](https://github.com/ptarmiganlabs/butler-cw) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Butler SOS (Qlik Sense monitoring tool)
      link: https://github.com/ptarmiganlabs/butler-sos
      icon_filename: butler-sos.png
      categories:
        - data-collection.apm
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Butler SOS Qlik Sense metrics for comprehensive performance analysis and management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Butler SOS (Qlik Sense monitoring tool) Exporter](https://github.com/ptarmiganlabs/butler-sos).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Butler SOS (Qlik Sense monitoring tool) Exporter](https://github.com/ptarmiganlabs/butler-sos) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: c-lightning
      link: https://github.com/lightningd/plugins/tree/master/prometheus
      icon_filename: lightning.png
      categories:
        - data-collection.blockchain-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track c-lightning metrics for optimized Lightning Network management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [c-lightning prometheus exporter](https://github.com/lightningd/plugins/tree/master/prometheus).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [c-lightning prometheus exporter](https://github.com/lightningd/plugins/tree/master/prometheus) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Cloudprober
      link: https://github.com/cloudprober/cloudprober
      icon_filename: cloudprober.png
      categories:
        - data-collection.synthetic-checks
    keywords:
      - cloud services
      - cloud computing
      - scalability
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep an eye on cloud service availability and latency with Cloudprober monitoring.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Cloudprober Exporter](https://github.com/cloudprober/cloudprober).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Cloudprober Exporter](https://github.com/cloudprober/cloudprober) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: consrv
      link: https://github.com/mdlayher/consrv
      icon_filename: consrv.png
      categories:
        - data-collection.generic-data-collection
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track serial console bridge server metrics for optimized service discovery and health management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [consrv](https://github.com/mdlayher/consrv).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [consrv](https://github.com/mdlayher/consrv) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: CoreRAD
      link: https://github.com/mdlayher/corerad
      icon_filename: corerad.png
      categories:
        - data-collection.dns-and-dhcp-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor CoreRAD IPv6 router advertisement daemon metrics for efficient network management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [CoreRAD](https://github.com/mdlayher/corerad).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [CoreRAD](https://github.com/mdlayher/corerad) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: CrateDB remote remote read/write adapter
      link: https://github.com/crate/cratedb-prometheus-adapter
      icon_filename: cratedb.png
      categories:
        - data-collection.database-servers
    keywords:
      - database
      - dbms
      - data storage
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track CrateDB metrics for efficient data storage and query performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [CrateDB remote remote read/write adapter](https://github.com/crate/cratedb-prometheus-adapter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [CrateDB remote remote read/write adapter](https://github.com/crate/cratedb-prometheus-adapter) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: DRBD  via drbd-reactor
      link: https://github.com/LINBIT/drbd-reactor
      icon_filename: drbd.png
      categories:
        - data-collection.storage-mount-points-and-filesystems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track DRBD metrics for efficient distributed replicated block device management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [DRBD exporter via drbd-reactor](https://github.com/LINBIT/drbd-reactor).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [DRBD exporter via drbd-reactor](https://github.com/LINBIT/drbd-reactor) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Falco
      link: https://github.com/falcosecurity/falco
      icon_filename: falco.png
      categories:
        - data-collection.security-systems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Falco security metrics for efficient runtime security management and threat detection.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Falco](https://github.com/falcosecurity/falco).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Falco](https://github.com/falcosecurity/falco) by following the instructions mentioned in the exporter README.


- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: FastNetMon Advanced
      link: https://fastnetmon.com/docs-fnm-advanced/
      icon_filename: fastnetmon.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords:
      - network monitoring
      - network performance
      - traffic analysis
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep tabs on FastNetMon Advanced network monitoring metrics for efficient traffic analysis and DDoS detection.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [FastNetMon Advanced exporter](https://fastnetmon.com/docs-fnm-advanced/).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [FastNetMon Advanced exporter](https://fastnetmon.com/docs-fnm-advanced/) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Faucet SDN Faucet
      link: https://github.com/faucetsdn/faucet
      icon_filename: faucet.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Faucet software-defined networking metrics for efficient network management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Faucet SDN Faucet Exporter](https://github.com/faucetsdn/faucet).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Faucet SDN Faucet Exporter](https://github.com/faucetsdn/faucet) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Fawkes
      link: https://github.com/fawkesrobotics/fawkes
      icon_filename: fawkes.png
      categories:
        - data-collection.generic-data-collection
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Fawkes Robotic Real-Time Applications metrics for enhanced monitoring.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Fawkes](https://github.com/fawkesrobotics/fawkes).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Fawkes](https://github.com/fawkesrobotics/fawkes) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: gitlab-pages
      link: https://gitlab.com/gitlab-org/gitlab-pages/
      icon_filename: gitlab.png
      categories:
        - data-collection.apm
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track GitLab Pages metrics for optimized static site hosting and management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [gitlab-pages exporter](https://gitlab.com/gitlab-org/gitlab-pages/).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [gitlab-pages exporter](https://gitlab.com/gitlab-org/gitlab-pages/) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: gitlab-workhorse
      link: https://gitlab.com/gitlab-org/gitlab-workhorse
      icon_filename: gitlab.png
      categories:
        - data-collection.apm
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor GitLab Workhorse metrics for efficient web server and reverse proxy management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [gitlab-workhorse](https://gitlab.com/gitlab-org/gitlab-workhorse).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [gitlab-workhorse](https://gitlab.com/gitlab-org/gitlab-workhorse) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: GlusterFS
      link: https://github.com/gluster/gluster-prometheus
      icon_filename: gluster.png
      categories:
        - data-collection.storage-mount-points-and-filesystems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep tabs on GlusterFS distributed file system metrics for optimized storage management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [GlusterFS Exporter](https://github.com/gluster/gluster-prometheus).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [GlusterFS Exporter](https://github.com/gluster/gluster-prometheus) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Google Cloud Status Dashboard
      link: https://github.com/DazWilkin/gcp-status
      icon_filename: gcp.png
      categories:
        - data-collection.cloud-provider-managed
    keywords:
      - cloud services
      - cloud computing
      - scalability
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep an eye on Google Cloud status metrics for efficient service availability management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Google Cloud Status Dashboard exporter](https://github.com/DazWilkin/gcp-status).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Google Cloud Status Dashboard exporter](https://github.com/DazWilkin/gcp-status) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: haraka
      link: https://github.com/mailprotector/haraka-plugin-prometheus
      icon_filename: haraka.png
      categories:
        - data-collection.mail-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Haraka SMTP server metrics for efficient email delivery and security management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [haraka exporter](https://github.com/mailprotector/haraka-plugin-prometheus).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [haraka exporter](https://github.com/mailprotector/haraka-plugin-prometheus) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Hetzner Cloud CSI Driver (Nodes)
      link: https://github.com/hetznercloud/csi-driver
      icon_filename: hetznercloud.png
      categories:
        - data-collection.cloud-provider-managed
    keywords:
      - cloud services
      - cloud computing
      - scalability
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Hetzner Cloud Container Storage Interface driver metrics for efficient Kubernetes storage management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Hetzner Cloud CSI Driver (Nodes)](https://github.com/hetznercloud/csi-driver).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Hetzner Cloud CSI Driver (Nodes)](https://github.com/hetznercloud/csi-driver) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Lutron Homeworks
      link: https://github.com/jbarwick/homeworks-service
      icon_filename: lutron-homeworks.png
      categories:
        - data-collection.iot-devices
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep an eye on Homeworks home automation system metrics for optimized smart home management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Lutron Homeworks Exporter](https://github.com/jbarwick/homeworks-service).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Lutron Homeworks Exporter](https://github.com/jbarwick/homeworks-service) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: JIRAlert
      link: https://github.com/alin-sinpalean/jiralert
      icon_filename: jira.png
      categories:
        - data-collection.notifications
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep tabs on JIRA issue tracking metrics for optimized project management and collaboration.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [JIRAlert](https://github.com/alin-sinpalean/jiralert).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [JIRAlert](https://github.com/alin-sinpalean/jiralert) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Kafka Configs
      link: https://github.com/EladLeev/kafka-config-metrics
      icon_filename: kafka.png
      categories:
        - data-collection.message-brokers
    keywords:
      - big data
      - stream processing
      - message broker
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Kafka configuration metrics for optimized message queue performance and management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Kafka Configs Metrics Exporter](https://github.com/EladLeev/kafka-config-metrics).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Kafka Configs Metrics Exporter](https://github.com/EladLeev/kafka-config-metrics) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Maddy Mail Server t
      link: https://github.com/foxcpp/maddy
      icon_filename: maddy.png
      categories:
        - data-collection.mail-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep tabs on Maddy Mail Server metrics for efficient email delivery and security management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Maddy Mail Server metrics endpoint](https://github.com/foxcpp/maddy).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Maddy Mail Server metrics endpoint](https://github.com/foxcpp/maddy) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Purpleidea Mgmt
      link: https://github.com/purpleidea/mgmt
      icon_filename: mgmtconfig.png
      categories:
        - data-collection.provisioning-systems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep an eye on MGMT configuration management system metrics for efficient infrastructure management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [mgmt exporter](https://github.com/purpleidea/mgmt).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [mgmt exporter](https://github.com/purpleidea/mgmt) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Nebula
      link: https://github.com/immstudios/promexp
      icon_filename: nebula.png
      categories:
        - data-collection.media-streaming-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep an eye on Nebula broadcast system metrics for efficient media broadcasting and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Nebula Exporter (unified exporter for broadcasters)](https://github.com/immstudios/promexp).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Nebula Exporter (unified exporter for broadcasters)](https://github.com/immstudios/promexp) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: NeonKube Service
      link: https://github.com/nforgeio/neonKUBE
      icon_filename: neonkube.png
      categories:
        - data-collection.service-discovery-registry
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Neon CRM metrics for efficient nonprofit management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Neon Service Standard Exporter](https://github.com/nforgeio/neonKUBE).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Neon Service Standard Exporter](https://github.com/nforgeio/neonKUBE) by following the instructions mentioned in the exporter README.


- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Onionprobe
      link: https://gitlab.torproject.org/tpo/onion-services/onionprobe
      icon_filename: onion.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Tor network metrics for efficient anonymity network performance and management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Onionprobe](https://gitlab.torproject.org/tpo/onion-services/onionprobe).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Onionprobe](https://gitlab.torproject.org/tpo/onion-services/onionprobe) by following the instructions mentioned in the exporter README.



- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Opflex-agent
      link: https://github.com/noironetworks/opflex/blob/master/docs/prometheus.md
      icon_filename: opflex.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep tabs on OpFlex agent metrics for efficient software-defined networking management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Opflex-agent Exporter](https://github.com/noironetworks/opflex/blob/master/docs/prometheus.md).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Opflex-agent Exporter](https://github.com/noironetworks/opflex/blob/master/docs/prometheus.md) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Opflex-server
      link: https://github.com/noironetworks/opflex/blob/master/docs/prometheus.md
      icon_filename: opflex.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor OpFlex server metrics for efficient software-defined networking management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Opflex-server Exporter](https://github.com/noironetworks/opflex/blob/master/docs/prometheus.md).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Opflex-server Exporter](https://github.com/noironetworks/opflex/blob/master/docs/prometheus.md) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: ovn-kubernetes Master
      link: https://github.com/ovn-org/ovn-kubernetes
      icon_filename: kube-ovn.png
      categories:
        - data-collection.kubernetes
    keywords:
      - network monitoring
      - network performance
      - traffic analysis
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track OVN-Kubernetes master metrics for efficient Kubernetes networking management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [ovn-kubernetes Master Exporter](https://github.com/ovn-org/ovn-kubernetes).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [ovn-kubernetes Master Exporter](https://github.com/ovn-org/ovn-kubernetes) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: ovn-kubernetes Node
      link: https://github.com/ovn-org/ovn-kubernetes
      icon_filename: kube-ovn.png
      categories:
        - data-collection.kubernetes
    keywords:
      - network monitoring
      - network performance
      - traffic analysis
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor OVN-Kubernetes node metrics for efficient Kubernetes networking management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [ovn-kubernetes Node Exporter](https://github.com/ovn-org/ovn-kubernetes).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [ovn-kubernetes Node Exporter](https://github.com/ovn-org/ovn-kubernetes) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Pathvector
      link: https://github.com/natesales/pathvector
      icon_filename: pathvector.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Pathvector BGP routing metrics for efficient
        Border Gateway Protocol management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Pathvector](https://github.com/natesales/pathvector).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Pathvector](https://github.com/natesales/pathvector) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: PCP
      link: https://github.com/performancecopilot/pcp/blob/main/man/man3/pmwebapi.3
      icon_filename: pcp.png
      categories:
        - data-collection.apm
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Performance Co-Pilot system performance metrics for efficient IT infrastructure management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [PCP exporter](https://github.com/performancecopilot/pcp/blob/main/man/man3/pmwebapi.3).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [PCP exporter](https://github.com/performancecopilot/pcp/blob/main/man/man3/pmwebapi.3) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: poudriere
      link: https://rnd.phryk.net/phryk-evil-mad-sciences-llc/prometheus_poudriere
      icon_filename: poudriere.png
      categories:
        - data-collection.freebsd-systems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Poudriere FreeBSD package building and testing metrics for efficient package management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [poudriere exporter](https://rnd.phryk.net/phryk-evil-mad-sciences-llc/prometheus_poudriere).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [poudriere exporter](https://rnd.phryk.net/phryk-evil-mad-sciences-llc/prometheus_poudriere) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: RCT Inverter
      link: https://github.com/svalouch/rctmon
      icon_filename: rct.png
      categories:
        - data-collection.iot-devices
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep an eye on RCT Power inverter metrics for efficient solar energy management and monitoring.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [RctMon - RCT Inverter metrics extractor](https://github.com/svalouch/rctmon).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [RctMon - RCT Inverter metrics extractor](https://github.com/svalouch/rctmon) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: RTRTR
      link: https://github.com/NLnetLabs/rtrtr
      icon_filename: rtrtr.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Keep an eye on RPKI-to-Router (RTR) protocol metrics for efficient routing security and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [rtrtr exporter](https://github.com/NLnetLabs/rtrtr).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [rtrtr exporter](https://github.com/NLnetLabs/rtrtr) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: silverpeak
      link: https://github.com/ipHeaders/silverpeak-prometheus
      icon_filename: silverpeak.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Silver Peak SD-WAN metrics for efficient wide area network management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [silverpeak-prometheus](https://github.com/ipHeaders/silverpeak-prometheus).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [silverpeak-prometheus](https://github.com/ipHeaders/silverpeak-prometheus) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: SmartPi
      link: https://github.com/nDenerserve/SmartPi
      icon_filename: smartpi.png
      categories:
        - data-collection.hardware-devices-and-sensors
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track SmartPi smart meter metrics for efficient energy management and monitoring.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [SmartPi](https://github.com/nDenerserve/SmartPi).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [SmartPi](https://github.com/nDenerserve/SmartPi) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: SRS (v5.0.67+)
      link: https://github.com/ossrs/srs
      icon_filename: srs.jpg
      categories:
        - data-collection.media-streaming-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Simple-RTMP-Server (SRS) metrics for efficient live streaming server management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [SRS (v5.0.67+)](https://github.com/ossrs/srs).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [SRS (v5.0.67+)](https://github.com/ossrs/srs) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: supercronic
      link: https://github.com/aptible/supercronic/
      icon_filename: supercronic.png
      categories:
        - data-collection.provisioning-systems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Supercronic job scheduler metrics for efficient task scheduling and management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [supercronic](https://github.com/aptible/supercronic/).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [supercronic](https://github.com/aptible/supercronic/) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: SUSE Saptune
      link: https://github.com/SUSE/saptune
      icon_filename: suse.png
      categories:
        - data-collection.linux-systems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor SUSE Linux Enterprise Server (SLES) Saptune metrics for efficient system tuning and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [SUSE Saptune exporter](https://github.com/SUSE/saptune).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [SUSE Saptune exporter](https://github.com/SUSE/saptune) by following the instructions mentioned in the exporter README.

- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Tesla Wall Connector
      link: https://github.com/benclapp/tesla_wall_connector_exporter
      icon_filename: tesla.png
      categories:
        - data-collection.iot-devices
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Tesla Wall Connector charging station metrics for efficient electric vehicle charging management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Tesla Wall Connector Exporter](https://github.com/benclapp/tesla_wall_connector_exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Tesla Wall Connector Exporter](https://github.com/benclapp/tesla_wall_connector_exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Tezos Node
      link: https://gitlab.com/tezos/tezos
      icon_filename: tezos.png
      categories:
        - data-collection.blockchain-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Tezos blockchain node metrics for efficient blockchain network management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Tezos Node Exporter](https://gitlab.com/tezos/tezos).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Tezos Node Exporter](https://gitlab.com/tezos/tezos) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: ThirdAI
      link: https://github.com/ThirdAILabs/Demos
      icon_filename: thirdai.png
      categories:
        - data-collection.generic-data-collection
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor ThirdAI platform metrics for efficient management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [ThirdAI exporter](https://github.com/ThirdAILabs/Demos).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [ThirdAI exporter](https://github.com/ThirdAILabs/Demos) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Tinyproxy
      link: https://github.com/gmm42/tinyproxy_exporter
      icon_filename: tinyproxy.png
      categories:
        - data-collection.web-servers-and-web-proxies
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Tinyproxy lightweight HTTP proxy server metrics for efficient web proxy management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Tinyproxy exporter](https://github.com/gmm42/tinyproxy_exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Tinyproxy exporter](https://github.com/gmm42/tinyproxy_exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: TP-Link P110
      link: https://github.com/ijohanne/prometheus-tplink-p110-exporter
      icon_filename: tplink.png
      categories:
        - data-collection.iot-devices
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track TP-Link P110 smart plug metrics for efficient energy management and monitoring.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [TP-Link P110 Exporter](https://github.com/ijohanne/prometheus-tplink-p110-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [TP-Link P110 Exporter](https://github.com/ijohanne/prometheus-tplink-p110-exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: TPLink EasySmart Switch
      link: https://github.com/thelastguardian/tplinkexporter
      icon_filename: tplink.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor TPLink EasySmart network switch metrics for efficient network device management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [TPLink EasySmart Switch Exporter](https://github.com/thelastguardian/tplinkexporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [TPLink EasySmart Switch Exporter](https://github.com/thelastguardian/tplinkexporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: traceroute
      link: https://github.com/jeanfabrice/prometheus-tcptraceroute-exporter
      icon_filename: traceroute.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Export traceroute metrics for efficient network path analysis and performance monitoring.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [traceroute exporter](https://github.com/jeanfabrice/prometheus-tcptraceroute-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [traceroute exporter](https://github.com/jeanfabrice/prometheus-tcptraceroute-exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Transmission
      link: https://github.com/metalmatze/transmission-exporter
      icon_filename: transmission.png
      categories:
        - data-collection.p2p
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Transmission BitTorrent client metrics for efficient file downloads and resource management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Transmission Exporter](https://github.com/metalmatze/transmission-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Transmission Exporter](https://github.com/metalmatze/transmission-exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: trickster
      link: https://github.com/trickstercache/trickster
      icon_filename: trickster.png
      categories:
        - data-collection.web-servers-and-web-proxies
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Trickster caching reverse proxy for time-series databases metrics for efficient time-series data management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [trickster](https://github.com/trickstercache/trickster).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [trickster](https://github.com/trickstercache/trickster) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: TwinCAT ADS Web Service
      link: https://github.com/MarcusCalidus/twincat-ads-webservice-exporter
      icon_filename: twincat.png
      categories:
        - data-collection.generic-data-collection
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor TwinCAT ADS (Automation Device Specification) Web Service metrics for efficient industrial automation and control.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [TwinCAT ADS Web Service exporter](https://github.com/MarcusCalidus/twincat-ads-webservice-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [TwinCAT ADS Web Service exporter](https://github.com/MarcusCalidus/twincat-ads-webservice-exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: VDO Compression and deduplication
      link: https://github.com/pcuzner/vdo_exporter
      icon_filename: redhat.png
      categories:
        - data-collection.storage-mount-points-and-filesystems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Virtual Data Optimizer (VDO) compression and deduplication metrics for efficient storage optimization and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [VDO Compression and deduplication exporter](https://github.com/pcuzner/vdo_exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [VDO Compression and deduplication exporter](https://github.com/pcuzner/vdo_exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: VEEAM AHVProxy
      link: https://github.com/claranet/veeam-ahvproxy-exporter
      icon_filename: veeam.png
      categories:
        - data-collection.storage-mount-points-and-filesystems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Veeam Backup & Replication AHV Proxy metrics for efficient Nutanix AHV backup and recovery management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [VEEAM AHVProxy Exporter](https://github.com/claranet/veeam-ahvproxy-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [VEEAM AHVProxy Exporter](https://github.com/claranet/veeam-ahvproxy-exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Vespa engine
      link: https://github.com/vespa-engine/vespa_exporter
      icon_filename: vespa.png
      categories:
        - data-collection.search-engines
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Vespa search engine and big data processing metrics for efficient search and analytics performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Vespa engine exporter](https://github.com/vespa-engine/vespa_exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Vespa engine exporter](https://github.com/vespa-engine/vespa_exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Hub 3 router
      link: https://github.com/welbymcroberts/hub3_exporter
      icon_filename: hub3.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Hub 3.0 router metrics for efficient network device management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Virgin Media/Liberty Global Hub3 Exporter](https://github.com/welbymcroberts/hub3_exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Virgin Media/Liberty Global Hub3 Exporter](https://github.com/welbymcroberts/hub3_exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Warp10
      link: https://github.com/centreon/warp10-sensision-exporter
      icon_filename: warp10.png
      categories:
        - data-collection.database-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Warp 10 time-series database metrics for efficient time-series data management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Warp10 Exporter](https://github.com/centreon/warp10-sensision-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Warp10 Exporter](https://github.com/centreon/warp10-sensision-exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Windows perflib
      link: https://github.com/leoluk/perflib_exporter
      icon_filename: windows.png
      categories:
        - data-collection.windows-systems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Windows performance library metrics for efficient Windows system performance and resource management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Windows perflib exporter](https://github.com/leoluk/perflib_exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Windows perflib exporter](https://github.com/leoluk/perflib_exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: ClickHouse
      link: https://github.com/ClickHouse/ClickHouse
      icon_filename: clickhouse.png
      categories:
        - data-collection.database-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track ClickHouse analytics database metrics for efficient database performance and management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Yandex ClickHouse Exporter](https://github.com/ClickHouse/ClickHouse).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Yandex ClickHouse Exporter](https://github.com/ClickHouse/ClickHouse) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: YOURLS
      link: https://github.com/just1not2/prometheus-exporter-yourls
      icon_filename: yourls.png
      categories:
        - data-collection.apm
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor YOURLS (Your Own URL Shortener) metrics for efficient URL shortening service management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [YOURLS exporter](https://github.com/just1not2/prometheus-exporter-yourls).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [YOURLS exporter](https://github.com/just1not2/prometheus-exporter-yourls) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: zedhook
      link: https://github.com/mdlayher/zedhook
      icon_filename: zedhook.png
      categories:
        - data-collection.logs-servers
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor ZFS Event Daemon (ZED) metrics for efficient file system event monitoring and management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [zedhook](https://github.com/mdlayher/zedhook).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [zedhook](https://github.com/mdlayher/zedhook) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Zerto
      link: https://github.com/claranet/zerto-exporter
      icon_filename: zerto.png
      categories:
        - data-collection.cloud-provider-managed
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Zerto disaster recovery and data protection metrics for efficient backup and recovery management.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Zerto Exporter](https://github.com/claranet/zerto-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Zerto Exporter](https://github.com/claranet/zerto-exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: zrepl internal
      link: https://github.com/zrepl/zrepl
      icon_filename: zrepl.png
      categories:
        - data-collection.storage-mount-points-and-filesystems
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track ZFS replication metrics using zrepl for efficient file systemreplication management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [zrepl internal exporter](https://github.com/zrepl/zrepl).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [zrepl internal exporter](https://github.com/zrepl/zrepl) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Zulip
      link: https://github.com/brokenpip3/zulip-exporter
      icon_filename: zulip.png
      categories:
        - data-collection.notifications
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Monitor Zulip open-source group chat application metrics for efficient team communication management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Zulip Exporter](https://github.com/brokenpip3/zulip-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Zulip Exporter](https://github.com/brokenpip3/zulip-exporter) by following the instructions mentioned in the exporter README.
- <<: *module
  meta:
    <<: *meta
    most_popular: false
    community: true
    monitored_instance:
      name: Zyxel GS1200
      link: https://github.com/robinelfrink/gs1200-exporter
      icon_filename: zyxel.png
      categories:
        - data-collection.networking-stack-and-network-interfaces
    keywords: []
  overview:
    <<: *overview
    data_collection:
      metrics_description: |
        Track Zyxel GS1200 network switch metrics for efficient network device management and performance.
      method_description: |
        Metrics are gathered by periodically sending HTTP requests to [Zyxel GS1200 Exporter](https://github.com/robinelfrink/gs1200-exporter).
  setup:
    <<: *setup
    prerequisites:
      list:
        - title: Install OpenMetrics Exporter
          description: |
            Install [Zyxel GS1200 Exporter](https://github.com/robinelfrink/gs1200-exporter) by following the instructions mentioned in the exporter README.
