name: phpdaemon
title: phpDaemon collector
overview:
  application:
    description: |
      [phpDaemon](https://github.com/kakserpom/phpdaemon) is an asynchronous server-side framework for Web and network
      applications implemented in PHP using libevent.
  collector:
    description: |
      This collector monitors metrics from one or more phpDaemon instances, depending on your configuration.
setup:
  prerequisites:
    list:
      - title: Enable phpDaemon's HTTP server
        text: |
          Statistics expected to be in JSON format.
          
          <details>
          <summary>phpDaemon configuration</summary>
          
          Instruction from [@METAJIJI](https://github.com/METAJIJI).
          
          For enable `phpd` statistics on http, you must enable the http server and write an application.
          
          Application is important, because standalone
          application [ServerStatus.php](https://github.com/kakserpom/phpdaemon/blob/master/PHPDaemon/Applications/ServerStatus.php)
          provides statistics in html format and unusable for `netdata`.
          
          ```php
          // /opt/phpdaemon/conf/phpd.conf
          
          path /opt/phpdaemon/conf/AppResolver.php;
          Pool:HTTPServer {
              privileged;
              listen '127.0.0.1';
              port 8509;
          }
          ```
          
          ```php
          // /opt/phpdaemon/conf/AppResolver.php
          
          <?php
          
          class MyAppResolver extends \PHPDaemon\Core\AppResolver {
              public function getRequestRoute($req, $upstream) {
                  if (preg_match('~^/(ServerStatus|FullStatus)/~', $req->attrs->server['DOCUMENT_URI'], $m)) {
                      return $m[1];
                  }
              }
          }
          
          return new MyAppResolver;
          ```
          
          ```php
          /opt/phpdaemon/conf/PHPDaemon/Applications/FullStatus.php
          
          <?php
          namespace PHPDaemon\Applications;
          
          class FullStatus extends \PHPDaemon\Core\AppInstance {
              public function beginRequest($req, $upstream) {
                  return new FullStatusRequest($this, $upstream, $req);
              }
          }
          ```
          
          ```php
          // /opt/phpdaemon/conf/PHPDaemon/Applications/FullStatusRequest.php
          
          <?php
          namespace PHPDaemon\Applications;
          
          use PHPDaemon\Core\Daemon;
          use PHPDaemon\HTTPRequest\Generic;
          
          class FullStatusRequest extends Generic {
              public function run() {
                  $stime = microtime(true);
                  $this->header('Content-Type: application/javascript; charset=utf-8');
          
                  $stat = Daemon::getStateOfWorkers();
                  $stat['uptime'] = time() - Daemon::$startTime;
                  echo json_encode($stat);
              }
          }
          ```
          
          </details>
  configuration:
    options:
      description: |
        The following options can be defined globally: update_every, autodetection_retry.
      folding:
        title: Config options
        enabled: true
      list:
        - name: update_every
          description: Data collection frequency.
          default: 1
          required: false
        - name: autodetection_retry
          description: Re-check interval in seconds. Zero means not to schedule re-check.
          default: 0
          required: false
        - name: url
          description: Server URL.
          default: http://127.0.0.1:8509/FullStatus
          required: true
        - name: timeout
          description: HTTP request timeout.
          default: 2
          required: false
        - name: username
          description: Username for basic HTTP authentication.
          default: ""
          required: false
        - name: password
          description: Password for basic HTTP authentication.
          default: ""
          required: false
        - name: proxy_url
          description: Proxy URL.
          default: ""
          required: false
        - name: proxy_username
          description: Username for proxy basic HTTP authentication.
          default: ""
          required: false
        - name: proxy_password
          description: Password for proxy basic HTTP authentication.
          default: ""
          required: false
        - name: method
          description: HTTP request method.
          default: GET
          required: false
        - name: body
          description: HTTP request body.
          default: ""
          required: false
        - name: headers
          description: HTTP request headers.
          default: ""
          required: false
        - name: not_follow_redirects
          description: Redirect handling policy. Controls whether the client follows redirects.
          default: false
          required: false
        - name: tls_skip_verify
          description: Server certificate chain and hostname validation policy. Controls whether the client performs this check.
          default: false
          required: false
        - name: tls_ca
          description: Certification authority that the client uses when verifying the server's certificates.
          default: ""
          required: false
        - name: tls_cert
          description: Client TLS certificate.
          default: ""
          required: false
        - name: tls_key
          description: Client TLS key.
          default: ""
          required: false
    examples:
      folding:
        title: Config
        enabled: true
      list:
        - name: Basic
          description: A basic example configuration.
          data: |
            jobs:
              - name: local
                url: http://127.0.0.1:8509/FullStatus
        - name: HTTP authentication
          description: HTTP authentication.
          data: |
            jobs:
              - name: local
                url: http://127.0.0.1:8509/FullStatus
                username: username
                password: password
        - name: HTTPS with self-signed certificate
          description: HTTPS with self-signed certificate.
          data: |
            jobs:
              - name: local
                url: http://127.0.0.1:8509/FullStatus
                tls_skip_verify: yes
        - name: Multi-instance
          description: |
            > **Note**: When you define multiple jobs, their names must be unique.
            
            Collecting metrics from local and remote instances.
          data: |
            jobs:
              - name: local
                url: http://127.0.0.1:8509/FullStatus
            
              - name: remote
                url: http://192.0.2.1:8509/FullStatus
troubleshooting:
  problems:
    list: []
metrics:
  folding:
    title: Metrics
    enabled: false
  description: ""
  scopes:
    - name: global
      description: These metrics refer to the entire monitored application.
      labels: []
      metrics:
        - name: phpdaemon.workers
          description: Workers
          unit: workers
          chart_type: line
          dimensions:
            - name: alive
            - name: shutdown
        - name: phpdaemon.alive_workers
          description: Alive Workers State
          unit: workers
          chart_type: line
          dimensions:
            - name: idle
            - name: busy
            - name: reloading
        - name: phpdaemon.idle_workers
          description: Idle Workers State
          unit: workers
          chart_type: line
          dimensions:
            - name: preinit
            - name: init
            - name: initialized
        - name: phpdaemon.uptime
          description: Uptime
          unit: seconds
          chart_type: line
          dimensions:
            - name: time
